{"version":3,"sources":["components/Navbar.js","components/TextBox.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","placeholder","TextBox","useState","text","setText","style","color","defValue","onChange","event","target","value","rows","backgroundColor","toUpperCase","showAlert","toLowerCase","bold","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","Alert","alert","class","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eda82e18.chunk.js","sourcesContent":["import React  from 'react';\r\n//import { Link} from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n \r\n\r\n\r\n    return (\r\n      \r\n   <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n   <div className=\"container-fluid\">\r\n    {/*<Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>*/}\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  \r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n         {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n         <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/*<li className=\"nav-item\">\r\n         <Link className=\"nav-link\"  to=\"/about\">About</Link>\r\n    </li>*/}\r\n        \r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label mx-1\" htmlFor=\"flexSwitchCheckDefault\">{props.mode==='light'?'dark':'light'} mode</label>\r\n    </div>\r\n    \r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n    \r\n  </div>\r\n  \r\n</nav>\r\n\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextBox(props) {\r\n   \r\n\r\n    const RmExtraSpaces =()=>{\r\n\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\",\"success\");\r\n    }\r\n        const handleCopy=()=>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard!\",\"success\");\r\n    }\r\n\r\n    const handleClearclick = ()=>{\r\n        \r\n        setText(\" \");\r\n        props.showAlert(\"Cleared!\",\"success\");\r\n\r\n\r\n    }\r\n    const handleUpclick = ()=>{\r\n        \r\n        setText(text.toUpperCase());\r\n        props.showAlert(\"Converted To uppercase!\",\"success\");\r\n\r\n\r\n    }\r\n    \r\n    const handleLowclick = ()=>{\r\n        \r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"Converted To lowercase!\",\"success\");\r\n\r\n\r\n    }\r\n    const handleBoldclick = ()=>{\r\n        \r\n        setText(text.bold());\r\n\r\n\r\n    }\r\n    const handleOnchange = (event)=>{\r\n       \r\n        setText(event.target.value)\r\n\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    \r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <>\r\n       \r\n        \r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h1 >{ props.defValue }</h1>\r\n        \r\n     <div >\r\n        <textarea className = \"form-control\" onChange={handleOnchange}value={text} id= \"myBox\" rows =\"10\" \r\n        style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#042743'}}></textarea>\r\n        <br/>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpclick } ><strong>Convert to UpperCase</strong></button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowclick}><strong>Convert to LowerCase</strong></button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleBoldclick}><strong>B</strong></button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearclick}><strong>Clear Text</strong></button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}><strong>Copy Text</strong></button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={RmExtraSpaces}><strong>-Spaces</strong></button>\r\n    </div>\r\n    </div> \r\n    <div className=\"container my-3 \" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <p>\r\n            {text.length} no. of characters\r\n        </p>\r\n        <p>\r\n            {text.split(\" \").length} no of words\r\n        </p>\r\n        <p> {.08*text.split(\" \").length} time to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter Text in the Box above to Preview it!\"}</p>\r\n    </div> \r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n      \r\n        props.alert &&\r\n      <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>\r\n          {capitalize(props.alert.type)}\r\n        </strong> {props.alert.msg}\r\n        \r\n</div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","//import logo from './logo.svg';\nimport './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextBox from './components/TextBox';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n//import {\n  //BrowserRouter,\n  //Switch,\n  //Route\n//} from \"react-router-dom\";\n\nfunction App() {\nconst [mode, setMode]=useState('light'); // use state for dark/light mode\nconst [alert, setAlert] = useState(null);    // use state for alert \n\nconst showAlert=(message,type)=>{\n\n  setAlert(\n    {\n      msg: message,\n      type: type\n    }\n  )\n  setTimeout(() => {\n    setAlert(null);\n  }, 1400);\n\n}\n\nconst toggleMode =()=>{\n  if(mode==='light'){\n    setMode('dark')\n    document.body.style.backgroundColor='#042743';\n    showAlert(\"dark mode enabled\",\"success\");\n  }\n  else{\n    setMode('light')\n    document.body.style.backgroundColor='white';\n    showAlert(\"light mode enabled\",\"success\");\n  }\n}\n  \n  return (\n    //<BrowserRouter>\n    <>\n      <Navbar title= \"TextUtility\"  mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my -3\">\n        \n         {/* <Switch>\n              <Route exact path=\"/about\" >\n                  <About/>\n              </Route>\n                \n         <Route exact  path=\"/\">*/}\n                  <TextBox defValue = \" Enter the text below for Analyzation!\" mode={mode} showAlert={showAlert} />   \n           {/*   </Route>\n           </Switch>*/}\n          \n      </div>\n            \n    </>\n    //</BrowserRouter>\n      \n      );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}